Method Overriding in Java:
    Method overriding happens when we have same methods in parent and child classes.
Benefits:
    1. Flexibility if we don't like something from the parent class, we can override it and can provide our own
    implementation.
    2. Same method can act differently depending upon the object on which we call it.
Rules:
    1. Without inheritance method, overriding is not possible.
    2. Method signature should be the same in parent and child class.
    3. If something does not participate in inheritance, we cannot override it like constructors and private methods.
    4. We can increase the visibility in the child classes, but we can't decrease it .
    For example, we can go from default or protected to public, but we can't do the reverse.
    5. We can't override a static method, but we can re-declare it.
    For example, main method can't be overridden as it is static.
    6. We can't have different return type in the child class, it must be the same as of parent class.

OOPS Main pillars:
    1. Inheritance: code re-usability
    2. Polymorphism: less code dynamic code
    3. Abstraction:
    4. Encapsulating


    if a method is not present inside the parent class, we cant call that method using polymorphism.
            // we can only call the method inside parent and child using polymorphism.

Interface:
All the methods inside an interface which do not have body are abstract public.
