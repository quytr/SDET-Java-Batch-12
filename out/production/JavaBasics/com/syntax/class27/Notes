Collections Framework in Java:
    collection of classes that help us manage and manipulate data in a better way.
1. ArrayList
    - This class has many built-in methods like add(), remove(), clear(), etc
    - Dynamic and can adjust their size at run time.

ArrayList<> arrayList = new ArrayList<>();
ArrayList -> name of the class
<> -> diamond operator we specify the data type

Wrapper classes:
    (collection framework only works with classes)
byte -> Byte
short -> Short
int -> Integer
double -> Double
char -> Character

Why wrapper classes?
    1. we get built-in methods
    2. a lot of frameworks dont support primitive
When to use primitive:
    1. When we care about the memory because primitive occupy 4 times less memory as compared to wrapper.
    2. Performance
When to use Wrapper:
    When we care about the ease.

What is boxing and unboxing? Why do we need? *interview*
    boxing is to convert primitive to wrapper.
    unboxing is when we convert wrapper to primitive.
    We need this because collections framework does not support to primitive.
    double is a basic thing. Double is a bigger box.
    Boxing is putting the double into Double
    Unboxing is putting taking the double out of Double
    Autoboxing is doing that automatically
